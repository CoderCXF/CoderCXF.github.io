{"pages":[{"title":"CoderCXF","text":"关于作者 90后，目前(2019年) 电子科技大学研究生在读 研究方向是 图像处理与计算机视觉，但对 CS 胸怀热忱 本站主要是为了学习，提升自己的同时，希望对大家也能有所帮助，仅此而已 本站主要分享 务实、看的懂、保证可复现 的原创文章 联系方式 微信 : aaa18251716983 邮箱 ：CoderCXF@yeah.net 博客 ：https://dancingcode.cn/ 欢迎小伙伴们提出宝贵的意见，多多交流，评论加友链。","link":"/about/index.html"}],"posts":[{"title":"Git 配置 SSH Key","text":"Git是分布式版本控制系统的代表作，Linus的杰作，具体Git是如何进行版本控制的内容这里不作展开介绍，该文只谈如何配置SSH，将本地仓库和远程仓库关联，使得可以通过 ssh 协议进行传输，Git虽然也是支持 https协议的，但是传输速度较慢，所以还是推荐大家添加 ssh Key windows上的操作：1. 首先在本地机创建SSH Key： 首先你需要在自己电脑的用户主目录下查看是不是已经有.ssh文件，如果有的话则这一步直接可以跳过:所谓的用户主目录就是 c:/用户直接跳到第二步：2.在github上添加自己电脑上的 SSH Key 如果没有的话，打开Git bash (相信你已经安装过了Git)，输入以下命令:1$ ssh-keygen -t rsa -C \"==youremail@com==\" 注意：上面黄色部分（双引号里面）内容改成你自己注册github时候的邮箱号！* 输入上面命令会出现类似以下的提示： 下面就一路回车就好，大概需要三次回车，因为都是一些选择项，默认就好； 三次回车之后，就会出现下面的提示： 如果顺利的话（应该是顺利的），会在生成的 .ssh 文件在里面有id_rsa 和 id_rsa.pub 两个文件，这两个就是 SSH Key 的秘钥对，id_rsa 是私钥，id_rsa.pub 是公钥。 这时就可以在自己电脑上看到 .ssh 文件夹已经生成了： 打开 .ssh 可以看到三个文件： 2. 在github上添加自己电脑上的 SSH Key ， 找到 github 的 Settings 界面,然后点击 SSH Keys and GPG Keys, 会有如下界面：（因为我已经添加过了，所以这里不是空的） 然后点击右上角 NEW SSH Key， 新建一个 Key： 这里 Title 随便取就好，例如我的叫：My SSH Key； Key 里面的内容，就是第一步生成的 .ssh 文件里面的 id_rsa.pub 里面的内容，将内容拷贝至此就可以了,然后就添加成功了。 3. 上面的内容如果都做完了，就可以关联本地仓和远程仓了。 首先在github上创建一个新空仓库：取名最好和本地仓库一致。 这样就是一个空仓库了，仓库名叫 test 。然后我们在本地的同名仓库进行操作后就可以将本地仓库通过SSH上传至远程仓. 例如，我们添加一个新的文件 readme.txt 文件: 然后提交至本地仓，常规操作如下：12$ git add readme.txt$ git commit -m '第一次通过SSH提交至远程仓库' 然后是将本地仓和远程仓关联，输入命令：1$ git remote add origin git@gitub.com/xxxx/test.git 12//上面的代码就是将本地仓和远程仓进行关,其中git@github.com:michaelliao/test.git//是我们刚才创建的仓库名称,注意改成自己的仓库名称 现在就可以把本地库通过 SSH 协议推送到远程库上： 12$ git push -u origin master //第一次提交至空仓库加上-u， //不是空仓库就不用使用 -u 参数了 推送成功后，可以立刻在GitHub页面中看到远程库的内容已经和本地一模一样：（因为我提交了两次，可能有点不一样，但看到 readme.txt 这个而文件就说明成功了！） *从现在起，只要本地作了提交，就可以通过命令： 1$ git push origin master //此时就不用-u参数了 把本地master分支的修改推送至gitHub.至此整个配置就结束了。","link":"/2019/12/15/Git-%E9%85%8D%E7%BD%AE-SSH-Key/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/12/14/hello-world/"}],"tags":[{"name":"Git","slug":"Git","link":"/tags/Git/"},{"name":"SSH","slug":"SSH","link":"/tags/SSH/"},{"name":"SSH协议","slug":"SSH协议","link":"/tags/SSH%E5%8D%8F%E8%AE%AE/"}],"categories":[{"name":"Git教程","slug":"Git教程","link":"/categories/Git%E6%95%99%E7%A8%8B/"}]}